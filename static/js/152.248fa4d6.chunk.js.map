{"version":3,"file":"static/js/152.248fa4d6.chunk.js","mappings":"mKACA,QAA0B,6BAA1B,EAAyE,qCAAzE,EAA2H,gCAA3H,EAA2K,mCAA3K,EAA4N,iCAA5N,EAA2Q,iC,aCM3Q,MAqCA,EArCoBA,IAAsB,IAArB,YAAEC,GAAaD,EAClC,MAAOE,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IAW3C,OATAC,EAAAA,EAAAA,YAAU,KACR,WACE,MAAMC,EAAaL,EAAYM,KAAKC,IAAQC,EAAAA,EAAAA,IAAWD,KACjDE,QAAiBC,EAAAA,EAAAA,IAAsBL,GAE7CH,EAAaO,EACd,EALD,EAKI,GACH,CAACT,KAGFW,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAeF,UAC7BF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAuBF,SACnCZ,EACEe,MAAK,CAACC,EAAGC,IAAMD,EAAEE,WAAaD,EAAEC,aAChCb,KAAIc,IAAA,IAAC,MAAEC,EAAK,WAAEF,GAAYC,EAAA,OACzBE,EAAAA,EAAAA,MAAA,MAAIR,UAAWC,EAAkBF,SAAA,EAC/BS,EAAAA,EAAAA,MAAA,QAAMR,UAAWC,EAAqBF,SAAA,CAAC,WAC5BM,MAEXR,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAmBF,SAAC,SACrCF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAmBF,SAAEQ,MALDF,EAMlC,SAIZ,C","sources":["webpack://react-star-wars/./src/components/PersonPage/PersonFilms/PersonFilms.module.css?02f6","components/PersonPage/PersonFilms/PersonFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PersonFilms_wrapper__I-kYf\",\"list__container\":\"PersonFilms_list__container__eyG8R\",\"list__item\":\"PersonFilms_list__item__HAFxt\",\"item__episode\":\"PersonFilms_item__episode__kJGFY\",\"item__colon\":\"PersonFilms_item__colon__-rbL+\",\"item__title\":\"PersonFilms_item__title__75iiB\"};","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\n\nimport { makeConcurrentRequest, changeHTTP } from \"@utils/network\";\n\nimport styles from \"./PersonFilms.module.css\";\n\nconst PersonFilms = ({ personFilms }) => {\n  const [filmsName, setFilmsName] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const filmsHTTPS = personFilms.map((url) => changeHTTP(url));\n      const response = await makeConcurrentRequest(filmsHTTPS);\n\n      setFilmsName(response);\n    })();\n  }, [personFilms]);\n\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <ul className={styles.list__container}>\n          {filmsName\n            .sort((a, z) => a.episode_id - z.episode_id)\n            .map(({ title, episode_id }) => (\n              <li className={styles.list__item} key={episode_id}>\n                <span className={styles.item__episode}>\n                  Episode {episode_id}\n                </span>\n                <span className={styles.item__colon}> : </span>\n                <span className={styles.item__title}>{title}</span>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nPersonFilms.propTypes = {\n  personFilms: PropTypes.array,\n};\n\nexport default PersonFilms;\n"],"names":["_ref","personFilms","filmsName","setFilmsName","useState","useEffect","filmsHTTPS","map","url","changeHTTP","response","makeConcurrentRequest","_jsx","_Fragment","children","className","styles","sort","a","z","episode_id","_ref2","title","_jsxs"],"sourceRoot":""}